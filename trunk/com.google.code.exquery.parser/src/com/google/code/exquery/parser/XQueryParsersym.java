
/**
* <copyright>
*
* Copyright (c) 2009 Jin Mingjian and others.
* All rights reserved.   This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*   Jin Mingjian - Initial API and implementation
*  
* </copyright>
* 
**/

package com.google.code.exquery.parser;

public interface XQueryParsersym {
    public final static int
      TK_xquery = 98,
      TK_version = 99,
      TK_encoding = 100,
      TK_module = 78,
      TK_namespace = 56,
      TK_declare = 101,
      TK_boundary_space = 102,
      TK_strip = 79,
      TK_default = 63,
      TK_function = 80,
      TK_option = 103,
      TK_ordering = 104,
      TK_ordered = 20,
      TK_order = 64,
      TK_empty = 81,
      TK_greatest = 82,
      TK_least = 83,
      TK_copy_namespaces = 105,
      TK_preserve = 65,
      TK_no_preserve = 106,
      TK_inherit = 107,
      TK_no_inherit = 108,
      TK_collation = 84,
      TK_base_uri = 109,
      TK_at = 85,
      TK_import = 110,
      TK_schema = 111,
      TK_variable = 112,
      TK_construction = 113,
      TK_as = 57,
      TK_external = 86,
      TK_return = 61,
      TK_in = 87,
      TK_for = 48,
      TK_let = 49,
      TK_where = 114,
      TK_by = 88,
      TK_stable = 115,
      TK_ascending = 116,
      TK_descending = 117,
      TK_some = 51,
      TK_every = 52,
      TK_satisfies = 89,
      TK_case = 90,
      TK_then = 118,
      TK_else = 119,
      TK_or = 120,
      TK_and = 91,
      TK_to = 121,
      TK_union = 59,
      TK_intersect = 66,
      TK_except = 67,
      TK_instance = 122,
      TK_of = 123,
      TK_treat = 124,
      TK_castable = 125,
      TK_cast = 126,
      TK_validate = 50,
      TK_lax = 127,
      TK_strict = 128,
      TK_child = 27,
      TK_descendant = 28,
      TK_self = 29,
      TK_descendant_or_self = 30,
      TK_following_sibling = 31,
      TK_following = 32,
      TK_parent = 33,
      TK_ancestor = 34,
      TK_preceding_sibling = 35,
      TK_preceding = 36,
      TK_ancestor_or_self = 37,
      TK_unordered = 21,
      TK_document = 38,
      TK_div = 68,
      TK_idiv = 69,
      TK_mod = 70,
      TK_eq = 129,
      TK_ne = 130,
      TK_lt = 131,
      TK_le = 132,
      TK_gt = 133,
      TK_ge = 134,
      TK_is = 135,
      TK_attribute = 12,
      TK_comment = 13,
      TK_document_node = 14,
      TK_element = 10,
      TK_empty_sequence = 136,
      TK_if = 53,
      TK_item = 137,
      TK_node = 15,
      TK_processing_instruction = 16,
      TK_schema_attribute = 17,
      TK_schema_element = 11,
      TK_text = 18,
      TK_typeswitch = 54,
      TK_EOF_TOKEN = 92,
      TK_COMMA = 1,
      TK_SEMICOLON = 55,
      TK_COLON = 71,
      TK_DOUBLEQUOTE = 93,
      TK_SINGLEQUOTE = 94,
      TK_PLUS = 22,
      TK_MINUS = 39,
      TK_LEFTPAREN = 3,
      TK_RIGHTPAREN = 4,
      TK_LEFTBRACE = 8,
      TK_RIGHTBRACE = 6,
      TK_LEFTBRACKET = 72,
      TK_RIGHTBRACKET = 138,
      TK_SLASH = 23,
      TK_DoubleSlash = 24,
      TK_NodeCompLeft = 139,
      TK_NodeCompRight = 140,
      TK_DOLLAR = 7,
      TK_DoubleLEFTBRACE = 73,
      TK_DoubleRIGHTBRACE = 74,
      TK_QUESTION = 62,
      TK_TIMES = 9,
      TK_ORBar = 60,
      TK_EQUAL = 58,
      TK_NOTEQUAL = 141,
      TK_LESS = 19,
      TK_LESSEQUAL = 142,
      TK_GREATER = 75,
      TK_GREATEREQUAL = 143,
      TK_PragmaST = 46,
      TK_PragmaET = 95,
      TK_DoubleCOLON = 47,
      TK_ATSIGN = 40,
      TK_DOT = 41,
      TK_DOTDOT = 42,
      TK_ASSIGN = 96,
      TK_PIST = 25,
      TK_PIET = 97,
      TK_STEndMark = 144,
      TK_ETStartMark = 145,
      TK_NCName = 2,
      TK_Comment = 149,
      TK_IntegerLiteral = 43,
      TK_DecimalLiteral = 44,
      TK_DoubleLiteral = 45,
      TK_PredefinedEntityRef = 76,
      TK_CharRef = 77,
      TK_StringLiteral = 5,
      TK_EscapeQuot = 146,
      TK_EscapeApos = 147,
      TK_DirCommentConstructor = 26,
      TK_CDataSection = 148,
      TK_ERROR_TOKEN = 150;

    public final static String orderedTerminalSymbols[] = {
                 "",
                 "COMMA",
                 "NCName",
                 "LEFTPAREN",
                 "RIGHTPAREN",
                 "StringLiteral",
                 "RIGHTBRACE",
                 "DOLLAR",
                 "LEFTBRACE",
                 "TIMES",
                 "element",
                 "schema_element",
                 "attribute",
                 "comment",
                 "document_node",
                 "node",
                 "processing_instruction",
                 "schema_attribute",
                 "text",
                 "LESS",
                 "ordered",
                 "unordered",
                 "PLUS",
                 "SLASH",
                 "DoubleSlash",
                 "PIST",
                 "DirCommentConstructor",
                 "child",
                 "descendant",
                 "self",
                 "descendant_or_self",
                 "following_sibling",
                 "following",
                 "parent",
                 "ancestor",
                 "preceding_sibling",
                 "preceding",
                 "ancestor_or_self",
                 "document",
                 "MINUS",
                 "ATSIGN",
                 "DOT",
                 "DOTDOT",
                 "IntegerLiteral",
                 "DecimalLiteral",
                 "DoubleLiteral",
                 "PragmaST",
                 "DoubleCOLON",
                 "for",
                 "let",
                 "validate",
                 "some",
                 "every",
                 "if",
                 "typeswitch",
                 "SEMICOLON",
                 "namespace",
                 "as",
                 "EQUAL",
                 "union",
                 "ORBar",
                 "return",
                 "QUESTION",
                 "default",
                 "order",
                 "preserve",
                 "intersect",
                 "except",
                 "div",
                 "idiv",
                 "mod",
                 "COLON",
                 "LEFTBRACKET",
                 "DoubleLEFTBRACE",
                 "DoubleRIGHTBRACE",
                 "GREATER",
                 "PredefinedEntityRef",
                 "CharRef",
                 "module",
                 "strip",
                 "function",
                 "empty",
                 "greatest",
                 "least",
                 "collation",
                 "at",
                 "external",
                 "in",
                 "by",
                 "satisfies",
                 "case",
                 "and",
                 "EOF_TOKEN",
                 "DOUBLEQUOTE",
                 "SINGLEQUOTE",
                 "PragmaET",
                 "ASSIGN",
                 "PIET",
                 "xquery",
                 "version",
                 "encoding",
                 "declare",
                 "boundary_space",
                 "option",
                 "ordering",
                 "copy_namespaces",
                 "no_preserve",
                 "inherit",
                 "no_inherit",
                 "base_uri",
                 "import",
                 "schema",
                 "variable",
                 "construction",
                 "where",
                 "stable",
                 "ascending",
                 "descending",
                 "then",
                 "else",
                 "or",
                 "to",
                 "instance",
                 "of",
                 "treat",
                 "castable",
                 "cast",
                 "lax",
                 "strict",
                 "eq",
                 "ne",
                 "lt",
                 "le",
                 "gt",
                 "ge",
                 "is",
                 "empty_sequence",
                 "item",
                 "RIGHTBRACKET",
                 "NodeCompLeft",
                 "NodeCompRight",
                 "NOTEQUAL",
                 "LESSEQUAL",
                 "GREATEREQUAL",
                 "STEndMark",
                 "ETStartMark",
                 "EscapeQuot",
                 "EscapeApos",
                 "CDataSection",
                 "Comment",
                 "ERROR_TOKEN"
             };

    public final static int numTokenKinds = orderedTerminalSymbols.length;
    public final static boolean isValidForParser = true;
}
